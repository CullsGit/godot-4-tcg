[gd_scene load_steps=2 format=3 uid="uid://bc8drppvhe6bq"]

[sub_resource type="GDScript" id="GDScript_sgr8p"]
script/source = "extends Panel

enum CardType { RED, BLUE, GREEN, PURPLE }

var type: CardType
var selected: bool = false

func set_type(new_type: CardType):
	type = new_type
	match type:
		CardType.RED: $ColorRect.color = Color(1, 0, 0)
		CardType.BLUE: $ColorRect.color = Color(0, 0, 1)
		CardType.GREEN: $ColorRect.color = Color(0, 1, 0)
		CardType.PURPLE: $ColorRect.color = Color(0.5, 0, 0.5)

func _on_card_pressed():
	selected = !selected
	update_visual_state()

func update_visual_state():
	if selected:
		modulate = modulate.lightened(0.3)
	else:
		modulate = modulate.darkened(0.3)


func reset_selection():
	selected = false
	update_visual_state()

func _on_card_gui_input(event: InputEvent) -> void:
	if event is InputEventMouseButton and event.pressed and event.button_index == MOUSE_BUTTON_LEFT:
		print(\"Card detected a click!\")
		_on_card_pressed()
"

[node name="Card" type="Panel"]
custom_minimum_size = Vector2(100, 125)
offset_right = 40.0
offset_bottom = 40.0
mouse_default_cursor_shape = 2
script = SubResource("GDScript_sgr8p")

[node name="ColorRect" type="ColorRect" parent="."]
custom_minimum_size = Vector2(100, 125)
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2

[connection signal="gui_input" from="." to="." method="_on_card_gui_input"]
